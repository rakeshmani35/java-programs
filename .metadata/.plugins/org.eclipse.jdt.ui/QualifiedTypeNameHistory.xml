<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="java.lang.management.ManagementFactory"/>
<fullyQualifiedTypeName name="java.lang.Double"/>
<fullyQualifiedTypeName name="com.multiple.ifelse.CalculationWithMultipleCondition"/>
<fullyQualifiedTypeName name="com.multiple.ifelse.Addition"/>
<fullyQualifiedTypeName name="com.multiple.ifelse.Substraction"/>
<fullyQualifiedTypeName name="com.multiple.ifelse.Multiplication"/>
<fullyQualifiedTypeName name="com.multiple.ifelse.Division"/>
<fullyQualifiedTypeName name="com.multiple.ifelse.Operation"/>
<fullyQualifiedTypeName name="com.multiple.ifelse.OperatorFactory"/>
<fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
<fullyQualifiedTypeName name="com.multiple.ifelse.Calculation"/>
<fullyQualifiedTypeName name="com.multiple.ifelse.CalculateUsingEnum"/>
<fullyQualifiedTypeName name="com.multiple.ifelse.Operator"/>
<fullyQualifiedTypeName name="java.util.function.Supplier"/>
<fullyQualifiedTypeName name="java.util.Scanner"/>
<fullyQualifiedTypeName name="java.io.File"/>
<fullyQualifiedTypeName name="java.io.FileNotFoundException"/>
<fullyQualifiedTypeName name="java.lang.AutoCloseable"/>
<fullyQualifiedTypeName name="java.io.Closeable"/>
<fullyQualifiedTypeName name="com.concurrentmodificationexception.CopyOnWriteArrayListTest"/>
<fullyQualifiedTypeName name="java.util.concurrent.CopyOnWriteArrayList"/>
<fullyQualifiedTypeName name="com.override.Over"/>
<fullyQualifiedTypeName name="com.serializable.Address"/>
<fullyQualifiedTypeName name="java.util.Set"/>
<fullyQualifiedTypeName name="java.util.HashSet"/>
<fullyQualifiedTypeName name="java.util.Iterator"/>
<fullyQualifiedTypeName name="java.util.Queue"/>
<fullyQualifiedTypeName name="java.util.Stack"/>
<fullyQualifiedTypeName name="com.lambda.HandleUnCheckedException"/>
<fullyQualifiedTypeName name="java.lang.ArithmeticException"/>
<fullyQualifiedTypeName name="java.util.Optional"/>
<fullyQualifiedTypeName name="com.optional.OptionalorElseVsorElseGet"/>
<fullyQualifiedTypeName name="com.override.B"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="java.util.stream.IntStream"/>
<fullyQualifiedTypeName name="java.lang.System"/>
<fullyQualifiedTypeName name="java.nio.file.Files"/>
<fullyQualifiedTypeName name="java.nio.file.Path"/>
<fullyQualifiedTypeName name="java.nio.file.Paths"/>
<fullyQualifiedTypeName name="com.parellal.stream.ParallelStreamCaseStudy"/>
<fullyQualifiedTypeName name="java.io.Serializable"/>
<fullyQualifiedTypeName name="java.util.Random"/>
<fullyQualifiedTypeName name="java.lang.String"/>
<fullyQualifiedTypeName name="java.math.BigDecimal"/>
<fullyQualifiedTypeName name="java.math.RoundingMode"/>
<fullyQualifiedTypeName name="com.parellal.stream.Employee"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="java.util.function.Function"/>
<fullyQualifiedTypeName name="java.util.Comparator"/>
<fullyQualifiedTypeName name="java.util.Map.Entry"/>
<fullyQualifiedTypeName name="com.studernt.search.dept.name.SearchStudentMain"/>
<fullyQualifiedTypeName name="com.studernt.search.dept.name.Marks"/>
<fullyQualifiedTypeName name="java.lang.Math"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="Java8Test.Student"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="java.util.stream.Collectors"/>
<fullyQualifiedTypeName name="java.util.stream.Stream"/>
</qualifiedTypeNameHistroy>
