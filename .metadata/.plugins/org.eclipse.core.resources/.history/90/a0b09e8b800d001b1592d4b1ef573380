package com.groupby;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;

// https://mkyong.com/java8/java-8-collectors-groupingby-and-mapping-example/
public class GroupByCountAndSort {

	public static void main(String[] args) {

		List<String> items = Arrays.asList("apple", "apple", "banana", "apple", "orange", "banana", "papaya");

		Map<String, Long> collect = items.stream()
				.collect(Collectors.groupingBy(Function.identity(), Collectors.counting()));

		// Sort a map and add to finalMap
		Map<String, Long> finalMap = new LinkedHashMap<>();
		collect.entrySet().stream().sorted(Map.Entry.<String, Long> comparingByValue().reversed())
				.forEachOrdered(e -> finalMap.put(e.getKey(), e.getValue()));
		
		System.out.println(finalMap);
	}

}
