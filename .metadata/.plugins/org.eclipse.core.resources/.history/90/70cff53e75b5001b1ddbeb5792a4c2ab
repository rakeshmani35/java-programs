package com.sort;

import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

// https://stackoverflow.com/questions/35866240/how-to-sort-string-array-by-length-using-arrays-sort
// https://www.techiedelight.com/sort-array-of-strings-java/
// https://www.geeksforgeeks.org/sort-array-strings-according-string-lengths/
// http://www.java2s.com/Tutorials/Java/Stream_How_to/Stream_Sort/Sort_String_Stream_by_length.htm
public class SortStringByLength {

	public static void main(String[] args) {

		String str = "this is kooks are as a book";

		// ------------------Sort String By Length using Map ------------

		sortStringByLengthUsingTreeMap(str);
		
		
		// ------------------Sort String By Length using java8 stream ------------
		sortStringByLengthUsingJava8Stream(str);
	}

	private static void sortStringByLengthUsingTreeMap(String str) {
		Map<Integer, String> map = new TreeMap<Integer, String>();
		String[] strArr = str.split(" ");
		for (String s : strArr) {

			int key = s.length();
			if (map.containsKey(key)) {
				String value = map.get(key);
				map.put(key, s + " " + value);
			} else {
				map.put(key, s);
			}
		}
		map.forEach((k, v) -> System.out.println(k + " = " + v));
	}

	private static void sortStringByLengthUsingJava8Stream(String str) {
		List<String> asList = Arrays.asList(str);
		Comparator<String> compByLength  = (str1, str2) -> str1.length() - str2.length();
		asList.stream().sorted(compByLength).forEach(s -> System.out.print(s+" "));
	}

}
